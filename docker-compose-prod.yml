version: '3.5'

x-commonenv: &commonenv
  POSTGRES_USER: web
  POSTGRES_DB: imjacinta_prod
  POSTGRES_PASSWORD_FILE: /run/secrets/dbpass
  RAILS_ENV: production
  RAILS_SERVE_STATIC_FILES: 'true'
  GCS_CREDS: /run/secrets/gcscreds

configs:
  traefik.toml:
    file: ./traefik.toml

services:
  # Setup Rake Tasks (e.g. migrate db)
  setup:
    image: jaci/imjacinta:2019.4.18
    command: bin/rails db:migrate
    environment:
      <<: *commonenv
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    secrets:
      - dbpass
      - secretkeybase
      - gcscreds
    depends_on:
      - db
    networks:
      - backend
  # Web Service
  imjacinta:
    image: jaci/imjacinta:2019.4.18
    command: bundle exec rails s -p 3000 -b 0.0.0.0
    environment:
      <<: *commonenv
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.frontend.rule=Host:imjac.in,www.imjac.in,dev.imjac.in"
        - "traefik.docker.network=traefik_proxy"
        - "traefik.port=3000"
    secrets:
      - dbpass
      - secretkeybase
      - gcscreds
    depends_on:
      - db
      - setup
    networks:
      - proxy
      - backend
  # Reverse Proxy
  rvs-proxy:
    image: traefik:alpine
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # --api
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_acme:/acme
    configs:
      - source: traefik.toml
        target: /etc/traefik/traefik.toml
    networks:
      - proxy
    deploy: 
      replicas: 1
      placement:
        constraints: [node.role == manager]
  # Database Engine
  # TODO: Need to manage replication if scaling application. Perhaps Mongo might be a good shout?
  db:
    image: postgres:9.6-alpine
    environment:
      <<: *commonenv
    secrets:
      - dbpass
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
   

networks:
  proxy:
    name: traefik_proxy
  backend:

volumes:
  pgdata:
  traefik_acme:

secrets:
  dbpass:
    external: true
  secretkeybase:
    external: true
  gcscreds:
    external: true
